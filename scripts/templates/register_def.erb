/*
 * Copyright (C) 2021 Microchip Technology Inc. and its subsidiaries.
 *
 * SPDX-License-Identifier: BSD-3-Clause
 */

#ifndef __DDR_REG_H
#define __DDR_REG_H

#include <stdint.h>

#if !defined(BIT_32)
#define BIT_32(x)	(1 << x)
#endif

#if !defined(GENMASK_32)
#define GENMASK_32(h, l) \
	(((1 << (1 + h - l)) - 1) << l)
#endif

<%- soc.chip.targets.each do |t| -%>
<%- t[:groups].each do |g| -%>
<%- g[:registers].each do |r| -%>
#define <%= sprintf("%-24s 0x%08x", t[:name].upcase + "_" + r[:name].upcase, soc.chip.regaddr(t, g, r)) %>
<%- r[:fields].each do |f| -%>
<%- mask = (f[:width] == 1 ? sprintf("BIT_32(%d)", f[:pos]) : sprintf("GENMASK_32(%d, %d)", f[:pos] + f[:width] - 1, f[:pos])) -%>
#define  <%= sprintf("%-24s %s", r[:name].upcase + "_" + f[:name].upcase, mask ) %>
<%- end -%>

<%- end -%>
<%- end -%>
<%- end -%>

<%- config.groups.each do |rg| -%>
#define XLIST_DDR_<%= rg[:name].upcase %> \
<%- rg[:regs].sort.each do |rname| -%>
        X(<%= rname %>, <%= soc.target(rname.upcase).upcase %>_<%= rname.upcase %>, <%= rg[:name] %>)	\
<%- end -%>

<%- end -%>

#endif /* __DDR_REG_H */
